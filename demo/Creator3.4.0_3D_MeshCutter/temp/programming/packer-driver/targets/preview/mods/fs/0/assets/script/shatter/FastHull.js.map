{"version":3,"sources":["file:///Users/zzf520/Documents/GitHub/CococsCreator-public-technology-solutions/demo/Creator3.4.0_3D_MeshCutter/assets/script/shatter/FastHull.ts"],"names":["FastHull","readAttribute","data","constructor","out","size","Vec3","Vec2","Vec4","Color","console","warn","i","Math","ceil","length","start","end","push","slice","writeAttribute","l","x","y","z","w","primitives","math","gfx","tempVec3","mesh","Array","vertices","indices","normals","colors","tangents","uvs","positions","minPos","maxPos","center","add","multiplyScalar","subtract","IsEmpty","isValid","GetMesh","hull","customAttributes","attr","Attribute","AttributeName","ATTR_TANGENT","Format","RGB32F","values","box","width","height","Split","localPointOnPlane","localPlaneNormal","fillCut","equals","ZERO","set","UP","a","b","vertexAbovePlane","oldToNewVertexMap","AssignVertices","cutEdges","cutColors","AssignTriangles","FastFillCutEdges","ValidateOutput","pointOnPlane","planeNormal","vertex","abovePlane","dot","triangleCount","index0","index1","index2","above0","above1","above2","top","cw","ccw","cutVertex0","cutVertex1","cutColor0","cutColor1","SplitTriangle","topHull","bottomHull","cwIntersection","ccwIntersection","cwColorIntersection","ccwColorIntersection","v0","v1","v2","cwDenominator","cwScalar","clamp01","ccwDenominator","ccwScalar","cwVertex","ccwVertex","cwA","ccwA","cwB","ccwB","n0","n1","n2","cwNormal","normalize","ccwNormal","c0","c1","c2","cwColor","lerp","ccwColor","t0","t1","t2","cwTangent","ccwTangent","u0","u1","u2","cwUv","ccwUv","edges","pos","normal","log","t","temp","j","lengthSqr","splice","offsetA","offsetB","normalA","negate","normalB","tangentA","CalculateTangent","tangentB","indicesA","indicesB","count","uvsa","uvMap","uvsb","tan","cross","FORWARD","offset","uvRangeMin","uvRangeMax","_i0","_i1","_i2","divide","dir","abs","RIGHT","lengthA","LengthAlongAxis","lengthB","sum","smallestValidLength","smallestValidRatio","axis","min","max","forEach","distance"],"mappings":"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","sourcesContent":["import { Vec2, Vec3, Vec4, Color, Mesh, primitives, math, gfx } from 'cc';\n\nconst tempVec3 = new Vec3(0, 0, 0);\n\ninterface IGeometry extends primitives.IGeometry {\n    tangents?: number[];\n}\n\nexport class FastHull {\n    protected static smallestValidLength: number = 0.01;\n    protected static smallestValidRatio: number = 0.05;\n\n    protected isValid: boolean = true;\n\n    protected vertices: Array<Vec3>;\n    protected normals: Array<Vec3> = new Array<Vec3>();\n    protected colors: Array<Color> = new Array<Color>();\n    protected tangents: Array<Vec4> = new Array<Vec4>();\n    protected uvs: Array<Vec2> = new Array<Vec2>();\n    protected indices: Array<number> = new Array<number>();\n\n    protected center: Vec3 = new Vec3();\n    protected size: Vec3 = new Vec3();\n\n    protected minPos: Vec3 = new Vec3();\n    protected maxPos: Vec3 = new Vec3();\n\n    constructor(reference?: FastHull)\n    constructor(mesh: IGeometry)\n    constructor(mesh?: IGeometry | FastHull) {\n\n        if (mesh instanceof FastHull) {\n\n            this.vertices = []\n\n            this.indices = []\n\n            if (mesh.normals && mesh.normals.length > 0) {\n                this.normals = []\n            }\n\n            if (mesh.colors && mesh.colors.length > 0) {\n                this.colors = [];\n            }\n\n            if (mesh.tangents && mesh.tangents.length > 0) {\n                this.tangents = [];\n            }\n\n\n            if (mesh.uvs && mesh.uvs.length > 0) {\n                this.uvs = []\n            }\n\n        } else {\n            mesh = mesh as IGeometry;\n            this.vertices = readAttribute(mesh.positions, Vec3);\n\n            this.indices = mesh.indices!;\n\n            if (mesh.normals && mesh.normals.length > 0) {\n                this.normals = readAttribute(mesh.normals, Vec3)\n            }\n\n\n            if (mesh.uvs && mesh.uvs.length > 0) {\n                this.uvs = readAttribute(mesh.uvs, Vec2)\n            }\n\n            if (mesh.colors && mesh.colors.length > 0) {\n                this.colors = readAttribute(mesh.colors, Color);\n            }\n\n            if (mesh.tangents && mesh.tangents.length > 0) {\n                this.tangents = readAttribute(mesh.tangents, Vec4);\n            }\n\n            if (mesh.minPos && mesh.maxPos) {\n                this.center = Vec3.add(new Vec3(), mesh.minPos, mesh.maxPos).multiplyScalar(1 / 2);\n                this.size = Vec3.subtract(new Vec3(), mesh.maxPos, mesh.minPos);\n            }\n\n            // console.log(this)\n        }\n\n    }\n\n\n    get IsEmpty() {\n        return !this.isValid || this.vertices.length < 3 || this.indices.length < 3;\n    }\n\n    public GetMesh(hull: FastHull): IGeometry {\n        if (this.isValid) {\n            let mesh: IGeometry = { positions: [] };\n\n            mesh.positions = writeAttribute(hull.vertices);\n\n            mesh.indices = hull.indices;\n\n            mesh.customAttributes = [];\n\n            if (hull.normals) {\n                mesh.normals = writeAttribute(hull.normals);\n            }\n\n            if (hull.colors) {\n                mesh.normals = writeAttribute(hull.colors);\n            }\n\n\n            if (hull.tangents) {\n                mesh.customAttributes.push({ attr: new gfx.Attribute(gfx.AttributeName.ATTR_TANGENT, gfx.Format.RGB32F), values: writeAttribute(hull.tangents) })\n                mesh.tangents = writeAttribute(hull.tangents);\n            }\n\n            if (hull.uvs) {\n                mesh.uvs = writeAttribute(hull.uvs);\n            }\n\n            return mesh;\n        }\n\n        return primitives.box({ width: 1, height: 1, length: 1 });\n    }\n\n    public Split(localPointOnPlane: Vec3, localPlaneNormal: Vec3, fillCut: boolean): IGeometry[] {\n        if (localPlaneNormal.equals(Vec3.ZERO)) {\n            localPlaneNormal.set(Vec3.UP);\n        }\n\n        let a: FastHull = new FastHull(this);\n        let b: FastHull = new FastHull(this);\n\n        let vertexAbovePlane: boolean[] = [];\n        let oldToNewVertexMap: number[] = [];\n\n        this.AssignVertices(a, b, localPointOnPlane, localPlaneNormal, vertexAbovePlane, oldToNewVertexMap);\n\n        let cutEdges: Vec3[] = [];\n\n        let cutColors: Color[] = [];\n\n        this.AssignTriangles(a, b, vertexAbovePlane, oldToNewVertexMap, localPointOnPlane, localPlaneNormal, cutEdges, cutColors);\n\n        if (fillCut) {\n            // this.FillCutEdges(a, b, cutEdges, localPlaneNormal, uvMapper);\n            if (!this.FastFillCutEdges(a, b, cutEdges, localPointOnPlane, localPlaneNormal, cutColors)) {\n                return [];\n            }\n        }\n\n        this.ValidateOutput(a, b, localPlaneNormal);\n\n        // Set output\n\n        return [this.GetMesh(a), this.GetMesh(b)]\n    }\n\n    protected AssignVertices(a: FastHull, b: FastHull, pointOnPlane: Vec3, planeNormal: Vec3, vertexAbovePlane: boolean[], oldToNewVertexMap: number[]): void {\n\n        for (let i = 0; i < this.vertices.length; i++) {\n            let vertex: Vec3 = this.vertices[i];\n\n            let abovePlane: boolean = Vec3.subtract(tempVec3, vertex, pointOnPlane).dot(planeNormal) >= 0;\n\n            vertexAbovePlane[i] = abovePlane;\n\n            if (abovePlane) {\n                // Assign vertex to hull A\n                oldToNewVertexMap[i] = a.vertices.length;\n\n                a.vertices.push(vertex);\n\n                if (this.normals) {\n                    a.normals.push(this.normals[i]);\n                }\n\n                if (this.colors) {\n                    a.colors.push(this.colors[i]);\n                }\n\n                if (this.tangents) {\n                    a.tangents.push(this.tangents[i]);\n                }\n\n                if (this.uvs) {\n                    a.uvs.push(this.uvs[i]);\n                }\n            }\n            else {\n                // Assign vertex to hull B\n                oldToNewVertexMap[i] = b.vertices.length;\n\n                b.vertices.push(vertex);\n\n\n                if (this.normals) {\n                    b.normals.push(this.normals[i]);\n                }\n\n                if (this.colors) {\n                    b.colors.push(this.colors[i]);\n                }\n\n                if (this.tangents) {\n                    b.tangents.push(this.tangents[i]);\n                }\n\n                if (this.uvs) {\n                    b.uvs.push(this.uvs[i]);\n                }\n            }\n        }\n    }\n\n    protected AssignTriangles(a: FastHull, b: FastHull, vertexAbovePlane: boolean[], oldToNewVertexMap: number[], pointOnPlane: Vec3, planeNormal: Vec3, cutEdges: Vec3[], cutColors?: Color[]): void {\n\n        let triangleCount: number = this.indices.length / 3;\n\n        for (let i = 0; i < triangleCount; i++) {\n            let index0: number = this.indices[i * 3 + 0];\n            let index1: number = this.indices[i * 3 + 1];\n            let index2: number = this.indices[i * 3 + 2];\n\n            let above0: boolean = vertexAbovePlane[index0];\n            let above1: boolean = vertexAbovePlane[index1];\n            let above2: boolean = vertexAbovePlane[index2];\n\n            if (above0 && above1 && above2) {\n                // Assign triangle to hull A\n                a.indices.push(oldToNewVertexMap[index0]);\n                a.indices.push(oldToNewVertexMap[index1]);\n                a.indices.push(oldToNewVertexMap[index2]);\n            }\n            else if (!above0 && !above1 && !above2) {\n                // Assign triangle to hull B\n                b.indices.push(oldToNewVertexMap[index0]);\n                b.indices.push(oldToNewVertexMap[index1]);\n                b.indices.push(oldToNewVertexMap[index2]);\n            }\n            else {\n                // Split triangle\n                let top: number;\n                let cw: number;\n                let ccw: number;\n\n                if (above1 == above2 && above0 != above1) {\n                    top = index0;\n                    cw = index1;\n                    ccw = index2;\n                }\n                else if (above2 == above0 && above1 != above2) {\n                    top = index1;\n                    cw = index2;\n                    ccw = index0;\n                }\n                else {\n                    top = index2;\n                    cw = index0;\n                    ccw = index1;\n                }\n\n                let cutVertex0: Vec3 = new Vec3();\n                let cutVertex1: Vec3 = new Vec3();\n\n                let cutColor0: Color = new Color();\n                let cutColor1: Color = new Color();\n\n                if (vertexAbovePlane[top]) {\n                    this.SplitTriangle(a, b, oldToNewVertexMap, pointOnPlane, planeNormal, top, cw, ccw, cutVertex0, cutVertex1, cutColor0, cutColor1);\n                }\n                else {\n                    this.SplitTriangle(b, a, oldToNewVertexMap, pointOnPlane, planeNormal, top, cw, ccw, cutVertex1, cutVertex0, cutColor1, cutColor0);\n                }\n\n                // Add cut edge\n                if (!cutVertex0.equals(cutVertex1)) {\n                    cutEdges.push(cutVertex0);\n                    cutEdges.push(cutVertex1);\n                    if (this.colors) {\n                        cutColors?.push(cutColor0);\n                        cutColors?.push(cutColor1);\n                    }\n                }\n            }\n        }\n    }\n\n    protected SplitTriangle(topHull: FastHull, bottomHull: FastHull, oldToNewVertexMap: number[], pointOnPlane: Vec3, planeNormal: Vec3, top: number, cw: number, ccw: number, cwIntersection: Vec3, ccwIntersection: Vec3, cwColorIntersection?: Color, ccwColorIntersection?: Color) {\n        let v0: Vec3 = this.vertices[top];\n        let v1: Vec3 = this.vertices[cw];\n        let v2: Vec3 = this.vertices[ccw];\n\n        // Intersect the top-cw edge with the plane\n        let cwDenominator: number = Vec3.subtract(tempVec3, v1, v0).dot(planeNormal);\n        let cwScalar: number = math.clamp01(Vec3.subtract(tempVec3, pointOnPlane, v0).dot(planeNormal) / cwDenominator);\n\n        // Intersect the top-ccw edge with the plane\n        let ccwDenominator: number = Vec3.subtract(tempVec3, v2, v0).dot(planeNormal);\n        let ccwScalar: number = math.clamp01(Vec3.subtract(tempVec3, pointOnPlane, v0).dot(planeNormal) / ccwDenominator);\n\n        // Interpolate vertex positions\n        let cwVertex: Vec3 = new Vec3();\n\n        cwVertex.x = v0.x + (v1.x - v0.x) * cwScalar;\n        cwVertex.y = v0.y + (v1.y - v0.y) * cwScalar;\n        cwVertex.z = v0.z + (v1.z - v0.z) * cwScalar;\n\n        let ccwVertex: Vec3 = new Vec3();\n\n        ccwVertex.x = v0.x + (v2.x - v0.x) * ccwScalar;\n        ccwVertex.y = v0.y + (v2.y - v0.y) * ccwScalar;\n        ccwVertex.z = v0.z + (v2.z - v0.z) * ccwScalar;\n\n        // Create top triangle\n        let cwA: number = topHull.vertices.length;\n        topHull.vertices.push(cwVertex);\n\n        let ccwA: number = topHull.vertices.length;\n        topHull.vertices.push(ccwVertex);\n\n        topHull.indices.push(oldToNewVertexMap[top]);\n        topHull.indices.push(cwA);\n        topHull.indices.push(ccwA);\n\n        // Create bottom triangles\n        let cwB: number = bottomHull.vertices.length;\n        bottomHull.vertices.push(cwVertex);\n\n        let ccwB: number = bottomHull.vertices.length;\n        bottomHull.vertices.push(ccwVertex);\n\n        bottomHull.indices.push(oldToNewVertexMap[cw]);\n        bottomHull.indices.push(oldToNewVertexMap[ccw]);\n        bottomHull.indices.push(ccwB);\n\n        bottomHull.indices.push(oldToNewVertexMap[cw]);\n        bottomHull.indices.push(ccwB);\n        bottomHull.indices.push(cwB);\n\n\n        // Interpolate normals\n        if (this.normals && this.colors.length >= 3) {\n\n            let n0: Vec3 = this.normals[top];\n            let n1: Vec3 = this.normals[cw];\n            let n2: Vec3 = this.normals[ccw];\n\n            let cwNormal: Vec3 = new Vec3();\n\n            cwNormal.x = n0.x + (n1.x - n0.x) * cwScalar;\n            cwNormal.y = n0.y + (n1.y - n0.y) * cwScalar;\n            cwNormal.z = n0.z + (n1.z - n0.z) * cwScalar;\n\n            cwNormal.normalize();\n\n            let ccwNormal: Vec3 = new Vec3();\n\n            ccwNormal.x = n0.x + (n2.x - n0.x) * ccwScalar;\n            ccwNormal.y = n0.y + (n2.y - n0.y) * ccwScalar;\n            ccwNormal.z = n0.z + (n2.z - n0.z) * ccwScalar;\n\n            ccwNormal.normalize();\n\n            // Add vertex property\n            topHull.normals.push(cwNormal);\n            topHull.normals.push(ccwNormal);\n\n            bottomHull.normals.push(cwNormal);\n            bottomHull.normals.push(ccwNormal);\n        }\n\n        // Interpolate colors\n        if (this.colors && this.colors.length >= 3) {\n            let c0: Color = this.colors[top];\n            let c1: Color = this.colors[cw];\n            let c2: Color = this.colors[ccw];\n\n            let cwColor: Color = Color.lerp(new Color(), c0, c1, cwScalar);\n            let ccwColor: Color = Color.lerp(new Color(), c0, c2, ccwScalar);\n\n            // Add vertex property\n            topHull.colors.push(cwColor);\n            topHull.colors.push(ccwColor);\n\n            bottomHull.colors.push(cwColor);\n            bottomHull.colors.push(ccwColor);\n\n            cwColorIntersection?.set(cwColor);\n            ccwColorIntersection?.set(ccwColor);\n        }\n\n        // Interpolate tangents\n        if (this.tangents && this.tangents.length >= 3) {\n            let t0: Vec4 = this.tangents[top];\n            let t1: Vec4 = this.tangents[cw];\n            let t2: Vec4 = this.tangents[ccw];\n\n            let cwTangent: Vec4 = new Vec4();\n\n            cwTangent.x = t0.x + (t1.x - t0.x) * cwScalar;\n            cwTangent.y = t0.y + (t1.y - t0.y) * cwScalar;\n            cwTangent.z = t0.z + (t1.z - t0.z) * cwScalar;\n\n            cwTangent.normalize();\n            cwTangent.w = t1.w;\n\n            let ccwTangent: Vec4 = new Vec4();\n\n            ccwTangent.x = t0.x + (t2.x - t0.x) * ccwScalar;\n            ccwTangent.y = t0.y + (t2.y - t0.y) * ccwScalar;\n            ccwTangent.z = t0.z + (t2.z - t0.z) * ccwScalar;\n\n            ccwTangent.normalize();\n            ccwTangent.w = t2.w;\n\n            // Add vertex property\n            topHull.tangents.push(cwTangent);\n            topHull.tangents.push(ccwTangent);\n\n            bottomHull.tangents.push(cwTangent);\n            bottomHull.tangents.push(ccwTangent);\n        }\n\n\n        // Interpolate uvs\n        if (this.uvs) {\n\n            let u0: Vec2 = this.uvs[top];\n            let u1: Vec2 = this.uvs[cw];\n            let u2: Vec2 = this.uvs[ccw];\n\n            let cwUv: Vec2 = new Vec2();\n\n            cwUv.x = u0.x + (u1.x - u0.x) * cwScalar;\n            cwUv.y = u0.y + (u1.y - u0.y) * cwScalar;\n\n            let ccwUv: Vec2 = new Vec2();\n            ccwUv.x = u0.x + (u2.x - u0.x) * ccwScalar;\n            ccwUv.y = u0.y + (u2.y - u0.y) * ccwScalar;\n\n            // Add vertex property\n            topHull.uvs.push(cwUv);\n            topHull.uvs.push(ccwUv);\n\n            bottomHull.uvs.push(cwUv);\n            bottomHull.uvs.push(ccwUv);\n        }\n\n        // Set output\n        cwIntersection.set(cwVertex);\n        ccwIntersection.set(ccwVertex);\n    }\n\n    protected FastFillCutEdges(a: FastHull, b: FastHull, edges: Vec3[], pos: Vec3, normal: Vec3, colors: Color[]) {\n        if (edges.length < 3) {\n            console.log(\"edges point less 3! cut fail\")\n            return false;\n        }\n        for (let i = 0; i < edges.length - 3; i++) {\n            let t = edges[i + 1];\n            let temp = edges[i + 3];\n            for (let j = i + 2; j < edges.length - 1; j += 2) {\n                if (Vec3.subtract(tempVec3, edges[j], t).lengthSqr() < (1e-6)) {\n                    edges[j] = edges[i + 2];\n                    edges[i + 3] = edges[j + 1];\n                    edges[j + 1] = temp;\n                    break;\n                }\n                if (Vec3.subtract(tempVec3, edges[j + 1], t).lengthSqr() < (1e-6)) {\n                    edges[j + 1] = edges[i + 2];\n                    edges[i + 3] = edges[j];\n                    edges[j] = temp;\n                    break;\n                }\n            }\n            edges.splice(i + 2, 1);\n            if (this.colors) colors?.splice(i + 2, 1);\n        }\n        edges.splice(edges.length - 1, 1);\n        if (this.colors) colors?.splice(edges.length - 1, 1);\n\n\n        let offsetA = a.vertices.length;\n        let offsetB = b.vertices.length;\n\n        a.vertices.push(...edges);\n        b.vertices.push(...edges);\n        if (this.colors) {\n            a.colors.push(...colors);\n            b.colors.push(...colors);\n        }\n\n\n        if (this.normals) {\n            let normalA = Vec3.negate(new Vec3(), normal);\n            let normalB = normal;\n\n            let tangentA: Vec4 = this.CalculateTangent(normalA);\n            let tangentB: Vec4 = this.CalculateTangent(normalB);\n\n            for (let i = 0; i < edges.length; i++) {\n                a.normals.push(normalA);\n                b.normals.push(normalB);\n            }\n\n            if (this.tangents) {\n                for (let i = 0; i < edges.length; i++) {\n                    a.tangents.push(tangentA);\n                    b.tangents.push(tangentB);\n                }\n            }\n        }\n\n\n        let indicesA = [];\n        let indicesB = [];\n\n        for (let i = 1, count = edges.length - 1; i < count; i++) {\n            indicesA.push(offsetA + 0)\n            indicesA.push(offsetA + i + 1)\n            indicesA.push(offsetA + i)\n\n            indicesB.push(offsetB + 0)\n            indicesB.push(offsetB + i)\n            indicesB.push(offsetB + i + 1)\n        }\n\n        a.indices.push(...indicesA);\n        b.indices.push(...indicesB);\n\n\n\n        if (this.uvs) {\n\n            let uvsa = this.uvMap(indicesA, edges, offsetA);\n            a.uvs.push(...uvsa);\n            let uvsb = this.uvMap(indicesB, edges, offsetB);\n            b.uvs.push(...uvsb);\n\n        }\n        // return cutEdges;\n        return true;\n\n    }\n\n    protected CalculateTangent(normal: Vec3): Vec4 {\n        let tan: Vec3 = Vec3.cross(tempVec3, normal, Vec3.UP);\n        if (tan == Vec3.ZERO)\n            tan = Vec3.cross(tempVec3, normal, Vec3.FORWARD);\n        tan = Vec3.cross(tempVec3, tan, normal);\n        return new Vec4(tan.x, tan.y, tan.z, 1);\n    }\n\n    protected uvMap(indices: number[], vertices: Vec3[], offset: number) {\n\n        // console.log(indices);\n        // console.log(vertices);\n        // console.log(offset);\n\n        let uvs = [];\n        let count = indices.length / 3;\n        let uvRangeMin = new Vec2(0, 0);\n        let uvRangeMax = new Vec2(1, 1);\n        for (let i = 0; i < count; i++) {\n            let _i0 = indices[i * 3] - offset;\n            let _i1 = indices[i * 3 + 1] - offset;\n            let _i2 = indices[i * 3 + 2] - offset;\n\n            let v0 = Vec3.subtract(tempVec3, vertices[_i0], this.center).add(this.size).multiplyScalar(1 / 2);\n            v0 = Vec3.divide(new Vec3(), v0, this.size);\n            let v1 = Vec3.subtract(tempVec3, vertices[_i1], this.center).add(this.size).multiplyScalar(1 / 2);\n            v1 = Vec3.divide(new Vec3(), v1, this.size);\n            let v2 = Vec3.subtract(tempVec3, vertices[_i2], this.center).add(this.size).multiplyScalar(1 / 2);\n            v2 = Vec3.divide(new Vec3(), v2, this.size);\n\n            let a = Vec3.subtract(new Vec3(), v0, v1);\n            let b = Vec3.subtract(new Vec3(), v2, v1);\n            let dir = Vec3.cross(new Vec3(), a, b);\n            let x = Math.abs(Vec3.dot(dir, Vec3.RIGHT));\n            let y = Math.abs(Vec3.dot(dir, Vec3.UP));\n            let z = Math.abs(Vec3.dot(dir, Vec3.FORWARD));\n            if (x >= y && x >= z) {\n                uvs[_i0] = new Vec2(v0.z, v0.y);\n                uvs[_i1] = new Vec2(v1.z, v1.y);\n                uvs[_i2] = new Vec2(v2.z, v2.y);\n            }\n            else if (y >= x && y >= z) {\n                uvs[_i0] = new Vec2(v0.x, v0.z);\n                uvs[_i1] = new Vec2(v1.x, v1.z);\n                uvs[_i2] = new Vec2(v2.x, v2.z);\n            }\n            else if (z >= x && z >= y) {\n                uvs[_i0] = new Vec2(v0.x, v0.y);\n                uvs[_i1] = new Vec2(v1.x, v1.y);\n                uvs[_i2] = new Vec2(v2.x, v2.y);\n            }\n            uvs[_i0] = new Vec2(uvRangeMin.x + (uvRangeMax.x - uvRangeMin.x) * uvs[_i0].x, uvRangeMin.y + (uvRangeMax.y - uvRangeMin.y) * uvs[_i0].y);\n            uvs[_i1] = new Vec2(uvRangeMin.x + (uvRangeMax.x - uvRangeMin.x) * uvs[_i1].x, uvRangeMin.y + (uvRangeMax.y - uvRangeMin.y) * uvs[_i1].y);\n            uvs[_i2] = new Vec2(uvRangeMin.x + (uvRangeMax.x - uvRangeMin.x) * uvs[_i2].x, uvRangeMin.y + (uvRangeMax.y - uvRangeMin.y) * uvs[_i2].y);\n        }\n\n        return uvs;\n    }\n\n    protected ValidateOutput(a: FastHull, b: FastHull, planeNormal: Vec3) {\n        let lengthA = a.LengthAlongAxis(planeNormal);\n        let lengthB = b.LengthAlongAxis(planeNormal);\n\n        let sum = lengthA + lengthB;\n\n        if (sum < FastHull.smallestValidLength) {\n            a.isValid = false;\n            b.isValid = false;\n        }\n        else if (lengthA / sum < FastHull.smallestValidRatio) {\n            a.isValid = false;\n        }\n        else if (lengthB / sum < FastHull.smallestValidRatio) {\n            b.isValid = false;\n        }\n    }\n\n    protected LengthAlongAxis(axis: Vec3) {\n        if (this.vertices.length > 0) {\n            let min = this.vertices[0].dot(axis);\n            let max = min;\n\n            this.vertices.forEach((vertex) => {\n                let distance = vertex.dot(axis);\n                min = Math.min(distance, min);\n                max = Math.max(distance, max);\n            })\n            return max - min;\n        }\n\n        return 0;\n    }\n}\n\nfunction readAttribute(data: Array<number>, constructor: any): any[] {\n\n    const out: any[] = [];\n    let size: number = 0;\n    switch (constructor) {\n        case Vec3:\n            size = 3;\n            break;\n        case Vec2:\n            size = 2;\n            break;\n        case Vec4:\n        case Color:\n            size = 4;\n            break;\n        default:\n            console.warn('unexpect type');\n            break;\n        // return\n    }\n\n    for (let i = 0; i < Math.ceil(data.length / size); i++) {\n        let start = i * size;\n        let end = start + size;\n        out.push(new constructor(...data.slice(start, end)));\n    }\n\n    return out\n\n}\n\nfunction writeAttribute(data: Array<Vec2 | Vec3 | Vec4 | Color>): any[] {\n\n    const out: any[] = [];\n\n\n    if (data[0] instanceof Vec3) {\n\n        for (let i = 0, l = data.length; i < l; i++) {\n            out.push(data[i].x, data[i].y, (data[i] as Vec3).z);\n        }\n\n    }\n    else if (data[0] instanceof Vec2) {\n\n        for (let i = 0, l = data.length; i < l; i++) {\n            out.push(data[i].x, data[i].y);\n        }\n    }\n    else if (data[0] instanceof Vec4) {\n\n        for (let i = 0, l = data.length; i < l; i++) {\n            out.push(data[i].x, data[i].y, (data[i] as Vec4).z, (data[i] as Vec4).w);\n        }\n    }\n    else if (data[0] instanceof Color) {\n\n\n        for (let i = 0, l = data.length; i < l; i++) {\n            out.push(data[i].x, data[i].y, (data[i] as Color).z, (data[i] as Color).w);\n        }\n\n    }\n\n    return out\n\n}"]}