{"version":3,"sources":["file:///F:/GitHub/ZheFengZhang/CococsCreator%20public%20technology%20solutions/demo/Creator3.4.0_PartialScreenshot/assets/script/Screenshot2D.ts"],"names":["_decorator","Component","Node","Camera","RenderTexture","ImageAsset","view","Size","Texture2D","SpriteFrame","Sprite","UITransform","sys","log","error","Button","assetManager","instantiate","Vec3","Label","Canvas2Image","ccclass","property","Screenshot2D","start","canvas2image","getInstance","rt","reset","width","getVisibleSize","height","copyCamera","targetTexture","scheduleOnce","capture","copyRenderTex","targetNode","getComponent","worldPos","getWorldPosition","_buffer","readPixels","Math","round","x","y","showImage","img","_data","format","PixelFormat","RGBA8888","_compressed","texture","image","sf","packable","copyNode","spriteFrame","flipUVY","isNative","os","OS","IOS","OSX","setContentSize","downloaderBtn","node","active","tips","string","savaAsImage","arrayBuffer","isBrowser","_canvas","document","createElement","clearCanvas","ctx","getContext","rowBytes","row","sRow","imageData","createImageData","i","data","putImageData","saveAsPNG","filePath","jsb","fileUtils","getWritablePath","saveImageData","success","loadRemote","err","imageAsset","console","newNode","setPosition","position","z","parent","addChild","platform","Platform","WECHAT_GAME","wx","createCanvas","toTempFilePath","destWidth","destHeight","fileType","res","showToast","title","saveImageToPhotosAlbum","tempFilePath","fail","clearRect","onSaveImageBtnClicked"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Camera, RenderTexture, director, gfx, ImageAsset, renderer, view, Size, Texture2D, SpriteFrame, Sprite, UITransform, spriteAssembler, sys, Vec2, Canvas, warnID, log, error, Button, assetManager, instantiate, Vec3, Label } from 'cc';\r\nimport { JSB, PREVIEW } from 'cc/env';\r\nimport { Canvas2Image } from \"./Canvas2Image\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Screenshot2D')\r\nexport class Screenshot2D extends Component {\r\n\r\n    @property(Camera)\r\n    copyCamera: Camera = null!;\r\n\r\n    @property(Node)\r\n    targetNode: Node = null!;\r\n\r\n    @property(Button)\r\n    downloaderBtn: Button = null!;\r\n\r\n    @property(Node)\r\n    copyNode: Node = null!;\r\n\r\n    @property(Label)\r\n    tips: Label = null!;\r\n\r\n    rt: RenderTexture = null;\r\n\r\n    _canvas: HTMLCanvasElement = null!;\r\n\r\n    _buffer: ArrayBufferView = null!;\r\n\r\n    canvas2image: Canvas2Image = null!;\r\n\r\n    start() {\r\n        this.canvas2image = Canvas2Image.getInstance();\r\n        this.rt = new RenderTexture();\r\n        this.rt.reset({\r\n            width: view.getVisibleSize().width,\r\n            height: view.getVisibleSize().height,\r\n        })\r\n        this.copyCamera.targetTexture = this.rt;\r\n        this.scheduleOnce(() => {\r\n            this.capture();\r\n        }, 2)\r\n    }\r\n\r\n    capture() {\r\n        this.copyRenderTex();\r\n    }\r\n\r\n    copyRenderTex() {\r\n        var width = this.targetNode.getComponent(UITransform).width;\r\n        var height = this.targetNode.getComponent(UITransform).height;\r\n        var worldPos = this.targetNode.getWorldPosition();\r\n        this._buffer = this.rt.readPixels(Math.round(worldPos.x), Math.round(worldPos.y), width, height);\r\n        this.showImage(width, height);\r\n    }\r\n\r\n    showImage(width, height) {\r\n        let img = new ImageAsset();\r\n        img.reset({\r\n            _data: this._buffer,\r\n            width: width,\r\n            height: height,\r\n            format: Texture2D.PixelFormat.RGBA8888,\r\n            _compressed: false\r\n        });\r\n        let texture = new Texture2D();\r\n        texture.image = img;\r\n        let sf = new SpriteFrame();\r\n        sf.texture = texture;\r\n        sf.packable = false;\r\n        this.copyNode!.getComponent(Sprite).spriteFrame = sf;\r\n        this.copyNode!.getComponent(Sprite).spriteFrame.flipUVY = true;\r\n        if (sys.isNative && (sys.os === sys.OS.IOS || sys.os === sys.OS.OSX)) {\r\n            this.copyNode!.getComponent(Sprite).spriteFrame.flipUVY = false;\r\n        }\r\n        this.copyNode?.getComponent(UITransform)?.setContentSize(new Size(width, height));\r\n        this.downloaderBtn.node.active = true;\r\n        this.tips.string = `截图成功`;\r\n    }\r\n\r\n    savaAsImage(width, height, arrayBuffer) {\r\n        if (sys.isBrowser) {\r\n            if (!this._canvas) {\r\n                this._canvas = document.createElement('canvas');\r\n                this._canvas.width = width;\r\n                this._canvas.height = height;\r\n            } else {\r\n                this.clearCanvas();\r\n            }\r\n            let ctx = this._canvas.getContext('2d')!;\r\n            let rowBytes = width * 4;\r\n            for (let row = 0; row < height; row++) {\r\n                let sRow = height - 1 - row;\r\n                let imageData = ctx.createImageData(width, 1);\r\n                let start = sRow * width * 4;\r\n                for (let i = 0; i < rowBytes; i++) {\r\n                    imageData.data[i] = arrayBuffer[start + i];\r\n                }\r\n                ctx.putImageData(imageData, 0, row);\r\n            }\r\n            //@ts-ignore\r\n            this.canvas2image.saveAsPNG(this._canvas, width, height);\r\n            this.tips.string = `保存图片成功`;\r\n        } else if (sys.isNative) {\r\n            // console.log(\"原生平台暂不支持图片下载\");\r\n            // return;\r\n            let filePath = jsb.fileUtils.getWritablePath() + 'render_to_sprite_image.png';\r\n\r\n            // 目前 3.0.0 ~ 3.4.0 版本还不支持 jsb.saveImageData ,引擎计划在 3.5.0 支持, 要保存 imageData 为本地 png 文件需要参考下方的 pr 定制引擎\r\n            // https://gitee.com/zzf2019/engine-native/commit/1ddb6ec9627a8320cd3545d353d8861da33282a8\r\n\r\n            //@ts-ignore\r\n            if (jsb.saveImageData) {\r\n                //@ts-ignore\r\n                let success = jsb.saveImageData(this._buffer, width, height, filePath);\r\n                if (success) {\r\n                    // 用于测试图片是否正确保存到本地设备路径下\r\n                    assetManager.loadRemote<ImageAsset>(filePath, (err, imageAsset)=> {\r\n                        if (err) {\r\n                            console.log(\"show image error\")\r\n                        } else {\r\n                            var newNode = instantiate(this.targetNode);\r\n                            newNode.setPosition(new Vec3(-newNode.position.x, newNode.position.y, newNode.position.z));\r\n                            this.targetNode.parent.addChild(newNode);\r\n                            \r\n                            const spriteFrame = new SpriteFrame();\r\n                            const texture = new Texture2D();\r\n                            texture.image = imageAsset;\r\n                            spriteFrame.texture = texture;\r\n                            newNode.getComponent(Sprite).spriteFrame = spriteFrame;\r\n                            spriteFrame.packable = false;\r\n                            spriteFrame.flipUVY = true;\r\n                            if (sys.isNative && (sys.os === sys.OS.IOS || sys.os === sys.OS.OSX)) {\r\n                                spriteFrame.flipUVY = false;\r\n                            }\r\n    \r\n                            this.tips.string = `成功保存在设备目录并加载成功: ${filePath}`;\r\n                        }\r\n                    });\r\n                    log(\"save image data success, file: \" + filePath);\r\n                    this.tips.string = `成功保存在设备目录: ${filePath}`;\r\n                }\r\n                else {\r\n                    error(\"save image data failed!\");\r\n                    this.tips.string = `保存图片失败`;\r\n                }\r\n            }\r\n        } else if (sys.platform === sys.Platform.WECHAT_GAME) {\r\n            if (!this._canvas) {\r\n                //@ts-ignore\r\n                this._canvas = wx.createCanvas();\r\n                this._canvas.width = width;\r\n                this._canvas.height = height;\r\n            } else {\r\n                this.clearCanvas();\r\n            }\r\n            var ctx = this._canvas.getContext('2d');\r\n\r\n            var rowBytes = width * 4;\r\n\r\n            for (var row = 0; row < height; row++) {\r\n                var sRow = height - 1 - row;\r\n                var imageData = ctx.createImageData(width, 1);\r\n                var start = sRow * width * 4;\r\n\r\n                for (var i = 0; i < rowBytes; i++) {\r\n                    imageData.data[i] = arrayBuffer[start + i];\r\n                }\r\n\r\n                ctx.putImageData(imageData, 0, row);\r\n            }\r\n            //@ts-ignore\r\n            this._canvas.toTempFilePath({\r\n                x: 0,\r\n                y: 0,\r\n                width: this._canvas.width,\r\n                height: this._canvas.height,\r\n                destWidth: this._canvas.width,\r\n                destHeight: this._canvas.height,\r\n                fileType: \"png\",\r\n                success: (res) =>{\r\n                    //@ts-ignore\r\n                    wx.showToast({\r\n                        title: \"截图成功\"\r\n                    });\r\n                    this.tips.string = `截图成功`;\r\n                    //@ts-ignore\r\n                    wx.saveImageToPhotosAlbum({\r\n                        filePath: res.tempFilePath,\r\n                        success: (res)=> {\r\n                            //@ts-ignore              \r\n                            wx.showToast({\r\n                                title: \"成功保存到设备相册\",\r\n                            });\r\n                            this.tips.string = `成功保存在设备目录: ${res.tempFilePath}`;\r\n                        },\r\n                        fail: ()=> {\r\n                            this.tips.string = `保存图片失败`;\r\n                        }\r\n                    })\r\n                },\r\n                fail: ()=> {\r\n                    //@ts-ignore\r\n                    wx.showToast({\r\n                        title: \"截图失败\"\r\n                    });\r\n                    this.tips.string = `截图失败`;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    clearCanvas() {\r\n        let ctx = this._canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n\r\n    onSaveImageBtnClicked() {\r\n        var width = this.targetNode.getComponent(UITransform).width;\r\n        var height = this.targetNode.getComponent(UITransform).height;\r\n        this.savaAsImage(width, height, this._buffer)\r\n    }\r\n}\r\n"]}